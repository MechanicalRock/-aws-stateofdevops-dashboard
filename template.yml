AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: 'Creating all the related resources to generate a State Of DevOps dashboard'

Metadata:
  AWS::ServerlessRepo::Application:
    Name: mechanicalrock-state-of-devops-dashboard
    Description: Creating State of DevOps dashboard based on cloudwatch alarms and metrics.
    Author: Mechanical Rock
    SpdxLicenseId: Apache-2.0
    LicenseUrl: LICENSE
    ReadmeUrl: README.md
    Labels: ['stateofdevops', 'dashboard', 'sdo', 'service-health', 'monitoring','mttr', 'mtbf']
    HomePageUrl: https://github.com/MechanicalRock/aws-stateofdevops-dashboard
    SemanticVersion: 1.6.0
    SourceCodeUrl: https://github.com/MechanicalRock/aws-stateofdevops-dashboard

Parameters:
  PermissionsBoundary:
    Description: "An optional permissions boundary to apply to all roles"
    Type: String
    ConstraintDescription: Must match a valid ARN of an IAM policy for the permission boundary
    AllowedPattern: "^$|arn:aws:iam::\\d{12}:policy/[a-zA-Z\\-]+$"
    Default: ""
  SanitisePattern:
    Description: 'comma delimited list of patterns to use to sanitise pipeline names.  Strips the pipeline name to characters before the matching patter.  Example pipeline with name "foo-pipeline123" and sanitise pattern "-pipeline" will be reported as "foo"'
    Type: String
    Default: "-pipeline"
    AllowedPattern: '[a-zA-Z_\\-]+(,[a-zA-Z_\\-]+)*'

Globals:
  Function:
    Runtime: nodejs12.x
    Timeout: 60
    MemorySize: 128
    Tracing: Active

Conditions:
  HasPermissionBoundary: !Not [!Equals [!Ref PermissionsBoundary, ""]]

Resources:

  DescribeAlarmPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action: cloudwatch:DescribeAlarmHistory
            Resource: '*'

  ListPipelinePolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action: codepipeline:ListPipelines
            Resource: '*'

  DynamoStream:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: DynamoStream
      Handler: index.handler
      Environment:
        Variables:
          TABLE_NAME: !Ref EventStoreDynamoTable
      ReservedConcurrentExecutions: 1
      Events:
        DynamoDBStream:
          Type: DynamoDB
          Properties:
            Stream:
              'Fn::GetAtt':
                - EventStoreDynamoTable
                - StreamArn
            StartingPosition: TRIM_HORIZON
      CodeUri: ./src/dynamoStream
      Timeout: 60
      Policies:
        - CloudWatchPutMetricPolicy: {}
        - DynamoDBCrudPolicy:
            TableName: !Ref EventStoreDynamoTable
      PermissionsBoundary:
        !If [HasPermissionBoundary, !Ref PermissionsBoundary, !Ref AWS::NoValue]


  StateChangeHandler:
    Type: 'AWS::Serverless::Function'
    Properties:
      Description: Capturing all cloudwatch alarm State changes in dynamo
      Handler: stateChangeHandler.handler
      Runtime: nodejs12.x
      CodeUri: .build/src
      Environment:
        Variables:
          TABLE_NAME: !Ref EventStoreDynamoTable
          SANITISE_PATTERNS: !Ref SanitisePattern
      Events:
        cloudwatchEvent:
          Type: CloudWatchEvent
          Properties:
            Pattern:
              source:
                - 'aws.cloudwatch'
              detail-type:
                - 'CloudWatch Alarm State Change'
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref EventStoreDynamoTable
        - !Ref ListPipelinePolicy
        - !Ref DescribeAlarmPolicy
      PermissionsBoundary:
        !If [HasPermissionBoundary, !Ref PermissionsBoundary, !Ref AWS::NoValue]

        
  EventStoreDynamoTable:
    Type: AWS::DynamoDB::Table
    Properties:
      BillingMode: PAY_PER_REQUEST
      SSESpecification:
        SSEEnabled: true
      AttributeDefinitions:
        - AttributeName: 'id'
          AttributeType: 'S'
        - AttributeName: 'resourceId'
          AttributeType: 'S'
        - AttributeName: 'pipelineName'
          AttributeType: 'S'
        - AttributeName: 'bookmarked'
          AttributeType: 'S'
      KeySchema:
        - AttributeName: 'id'
          KeyType: HASH
        - AttributeName: 'resourceId'
          KeyType: 'RANGE'
      StreamSpecification:
        StreamViewType: NEW_AND_OLD_IMAGES
      GlobalSecondaryIndexes:
        - IndexName: 'resourceId-id-index'
          KeySchema:
            - AttributeName: 'resourceId'
              KeyType: HASH
            - AttributeName: 'id'
              KeyType: RANGE
          Projection:
            ProjectionType: 'ALL'
        - IndexName: 'pipelineName-index'
          KeySchema:
            - AttributeName: 'pipelineName'
              KeyType: HASH
            - AttributeName: 'bookmarked'
              KeyType: RANGE
          Projection:
            ProjectionType: 'ALL'
